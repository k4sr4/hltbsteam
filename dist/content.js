(()=>{"use strict";const e=new class{constructor(){this.mutationObserver=null,this.containerElement=null,this.metrics=null,this.lastUrl=window.location.href,this.log("Content script loaded on:",this.lastUrl)}async initialize(){const e=performance.now();if(this.isGamePage())try{const t=await this.sendMessage({action:"getSettings"});if(!t.success||!t.settings?.enabled)return void this.log("Extension is disabled");await this.waitForPageStability();const n=this.extractGameInfo();if(!n)return void console.warn("[HLTB] Could not extract game info");this.log("Game detected:",n);const a=await this.sendMessage({action:"fetchHLTB",gameTitle:n.title,appId:n.appId});if(a.success&&a.data){this.log("Data received:",a.data);const t=performance.now();this.injectHLTBData(a.data);const n=performance.now();this.metrics={startTime:e,injectionTime:t-e,totalTime:n-e},this.log("Performance metrics:",this.metrics)}else console.error("[HLTB] Failed to fetch data:",a.error||"No data returned"),this.injectError(a.error||"Failed to load completion times")}catch(e){console.error("[HLTB] Extension error:",e),this.injectError(e instanceof Error?e.message:"Unknown error occurred")}else this.log("Not a game page, skipping initialization")}async waitForPageStability(){this.log("Waiting for page stability...");let e=0;for(;e<20;){const t=document.querySelector(".game_area_purchase"),n=document.querySelector(".game_details"),a=document.querySelector(".page_content");if(t||n||a)return await this.sleep(500),void this.log("Page appears stable, ready to inject");await this.sleep(250),e++}this.log("Timed out waiting for page stability, injecting anyway")}sleep(e){return new Promise(t=>setTimeout(t,e))}isGamePage(){const e=window.location.href;return e.includes("store.steampowered.com/app/")||e.includes("steamcommunity.com/app/")}extractGameInfo(){const e=window.location.href,t=e.match(/\/app\/(\d+)/);if(!t)return null;const n=t[1];let a="";const o=e.match(/\/app\/\d+\/([^\/\?#]+)/);if(o&&(a=this.cleanUrlTitle(o[1])),!a){const e=document.querySelector("#appHubAppName");e?.textContent&&(a=e.textContent.trim())}if(!a){const e=document.querySelector('meta[property="og:title"]');e?.content&&(a=this.cleanMetaTitle(e.content))}return a||(a=this.cleanMetaTitle(document.title)),a?{appId:n,title:a}:null}cleanUrlTitle(e){return e.replace(/_/g," ").replace(/%20/g," ").trim()}cleanMetaTitle(e){return e.replace(/ on Steam$/,"").replace(/^Save \d+% on /,"").trim()}injectHLTBData(e){this.cleanup();const t=e=>null==e||0===e?"--":e+(1===e?" Hour":" Hours"),n=document.createElement("div");n.className="hltb-container",this.containerElement=n,e.source&&n.setAttribute("data-source",e.source),e.confidence&&n.setAttribute("data-confidence",e.confidence);const a=document.createElement("div");a.className="hltb-header";const o=document.createElement("span");o.className="hltb-logo",o.textContent="HLTB";const i=document.createElement("span");if(i.className="hltb-title",i.textContent="HowLongToBeat",e.source&&"api"!==e.source){const t=document.createElement("span");t.className="hltb-source";const n="cache"===e.source?"cached":"scraper"===e.source?"scraped":"fallback"===e.source?"estimated":"database"===e.source?"database":"";n&&(t.textContent=`(${n})`,i.appendChild(document.createTextNode(" ")),i.appendChild(t))}a.appendChild(o),a.appendChild(i);const s=document.createElement("div");s.className="hltb-times";const r=[{label:"Main Story",value:t(e.mainStory)},{label:"Main + Extra",value:t(e.mainExtra)},{label:"Completionist",value:t(e.completionist)}];if(null===e.mainStory&&null===e.mainExtra&&null===e.completionist){const e=document.createElement("div");e.className="hltb-multiplayer-notice",e.textContent="Multiplayer Game - No completion times",s.appendChild(e)}else r.forEach(({label:e,value:t})=>{const n=document.createElement("div");n.className="hltb-time-box","--"===t&&n.classList.add("hltb-no-data");const a=document.createElement("div");a.className="hltb-label",a.textContent=e;const o=document.createElement("div");o.className="hltb-hours",o.textContent=t,n.appendChild(a),n.appendChild(o),s.appendChild(n)});n.appendChild(a),n.appendChild(s),this.injectIntoPage(n)}injectError(e){this.cleanup();const t=document.createElement("div");t.className="hltb-container hltb-error-container",this.containerElement=t;const n=document.createElement("div");n.className="hltb-header";const a=document.createElement("span");a.className="hltb-title",a.textContent="HowLongToBeat",n.appendChild(a);const o=document.createElement("div");o.className="hltb-error",o.textContent=e,t.appendChild(n),t.appendChild(o),this.injectIntoPage(t)}injectIntoPage(e){const t=[".game_area_purchase",".game_area_purchase_game",".apphub_AppName",".apphub_HomeHeader",".rightcol",".game_meta_data","#appHubAppName"];let n=!1;for(const a of t){const t=document.querySelector(a);if(t){a.includes("apphub")||a.includes("appHub")?t.parentNode?.insertBefore(e,t.nextSibling):t.parentNode?.insertBefore(e,t),this.log("UI injected successfully at:",a),n=!0;break}}n||console.warn("[HLTB] Could not find injection point")}async sendMessage(e){try{return await chrome.runtime.sendMessage(e)||{success:!1,error:"No response from background service"}}catch(e){return console.error("[HLTB] Message error:",e),{success:!1,error:e instanceof Error?e.message:"Failed to communicate with extension"}}}setupNavigationObserver(){this.mutationObserver=new MutationObserver(()=>{const e=window.location.href;e!==this.lastUrl&&(this.lastUrl=e,this.log("Navigation detected:",e),this.cleanup(),this.isGamePage()&&(this.log("Re-initializing on new game page"),this.initialize()))}),this.mutationObserver.observe(document.body,{childList:!0,subtree:!0}),this.log("Navigation observer set up")}cleanup(){this.containerElement&&this.containerElement.parentNode&&(this.containerElement.parentNode.removeChild(this.containerElement),this.containerElement=null)}destroy(){this.cleanup(),this.mutationObserver&&(this.mutationObserver.disconnect(),this.mutationObserver=null),this.log("Content script destroyed")}log(e,t){void 0!==t?console.log(`[HLTB] ${e}`,t):console.log(`[HLTB] ${e}`)}};"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{e.initialize(),e.setupNavigationObserver()}):(e.initialize(),e.setupNavigationObserver()),window.addEventListener("unload",()=>{e.destroy()})})();