(()=>{"use strict";class t extends Error{constructor(t=60){super(`Rate limit exceeded. Retry after ${t} seconds`),this.name="RateLimitError",this.retryAfter=t,this.resetTime=new Date(Date.now()+1e3*t)}}class e extends Error{constructor(t,e,a){super(t),this.name="NetworkError",this.statusCode=e,this.originalError=a}}class a{constructor(t=3,e=1e3,a=3e4){this.retryCount=new Map,this.lastAttempt=new Map,this.maxRetries=t,this.baseDelay=e,this.maxDelay=a}async executeWithRetry(t,e,a){const s=this.retryCount.get(t)||0;try{const a=await e();return this.retryCount.delete(t),this.lastAttempt.delete(t),a}catch(r){if(s>=this.maxRetries)throw this.retryCount.delete(t),this.lastAttempt.delete(t),r;if(!(a?a(r):this.isDefaultRetriableError(r)))throw r;const i=this.calculateDelay(s);return this.retryCount.set(t,s+1),this.lastAttempt.set(t,Date.now()),console.log(`[RetryManager] Attempt ${s+1}/${this.maxRetries} for ${t}. Waiting ${i}ms`),await this.delay(i),this.executeWithRetry(t,e,a)}}calculateDelay(t){const e=Math.min(this.baseDelay*Math.pow(2,t),this.maxDelay),a=.25*Math.random()*e;return Math.floor(e+a)}delay(t){return new Promise(e=>setTimeout(e,t))}isDefaultRetriableError(a){if(a instanceof e){const t=a.statusCode;return!t||t>=500||429===t||0===t}return a instanceof t||"NetworkError"===a.name||"FetchError"===a.name||"AbortError"===a.name}reset(t){t?(this.retryCount.delete(t),this.lastAttempt.delete(t)):(this.retryCount.clear(),this.lastAttempt.clear())}}class s{constructor(t={}){this.options=t,this.API_ENDPOINT="https://howlongtobeat.com/api/search",this.rateLimitReset=null,this.retryManager=new a(t.maxRetries||3,t.baseDelay||1e3,t.maxDelay||3e4)}async searchGames(e){if(this.rateLimitReset&&this.rateLimitReset>new Date){const e=Math.ceil((this.rateLimitReset.getTime()-Date.now())/1e3);throw new t(e)}const a=this.buildSearchPayload(e);return this.retryManager.executeWithRetry(`search:${e}`,async()=>{const t=await this.makeRequest(a);return this.parseResponse(t)})}async getGameData(t){const e=await this.searchGames(t);return e&&0!==e.length?this.findBestMatch(t,e):null}buildSearchPayload(t){return{searchType:"games",searchTerms:t.split(" ").filter(t=>t.length>0),searchPage:1,size:20,searchOptions:{games:{userId:0,platform:"",sortCategory:"popular",rangeCategory:"main",rangeTime:{min:0,max:0},gameplay:{perspective:"",flow:"",genre:""},modifier:""},users:{sortCategory:"postcount"},filter:"",sort:0,randomizer:0}}}async makeRequest(a){const s=new AbortController,r=this.options.timeout||3e4,i=setTimeout(()=>s.abort(),r);try{const r=await fetch(this.API_ENDPOINT,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","Accept-Language":"en-US,en;q=0.9",Referer:"https://howlongtobeat.com",Origin:"https://howlongtobeat.com","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36","Cache-Control":"no-cache",Pragma:"no-cache"},body:JSON.stringify(a),signal:s.signal});if(clearTimeout(i),429===r.status){const e=this.parseRetryAfter(r.headers);throw this.rateLimitReset=new Date(Date.now()+1e3*e),new t(e)}if(!r.ok)throw new e(`HTTP ${r.status}: ${r.statusText}`,r.status);try{return await r.json()}catch(t){throw new e("Failed to parse response JSON",r.status,t)}}catch(a){if(clearTimeout(i),a instanceof Error&&"AbortError"===a.name)throw new e("Request timeout",void 0,a);if(a instanceof t||a instanceof e)throw a;throw new e("Network request failed",void 0,a)}}parseRetryAfter(t){const e=t.get("Retry-After");if(!e)return 60;const a=parseInt(e,10);if(!isNaN(a))return a;const s=new Date(e);return isNaN(s.getTime())?60:Math.max(0,Math.ceil((s.getTime()-Date.now())/1e3))}parseResponse(t){return t.data&&Array.isArray(t.data)?t.data.map(t=>this.parseGameData(t)):[]}parseGameData(t){return{mainStory:this.parseTimeValue(t.comp_main),mainExtra:this.parseTimeValue(t.comp_plus),completionist:this.parseTimeValue(t.comp_100),allStyles:this.parseTimeValue(t.comp_all),gameId:t.game_id,gameName:t.game_name,imageUrl:t.game_image?`https://howlongtobeat.com/games/${t.game_image}`:void 0,playerCounts:{main:t.comp_main_count||0,extra:t.comp_plus_count||0,completionist:t.comp_100_count||0,all:t.comp_all_count||0}}}parseTimeValue(t){if(null==t||0===t)return null;let e;if("string"==typeof t){const a=t.toString().replace(/[^\d.½¼¾]/g,""),s={"½":.5,"¼":.25,"¾":.75};let r=a;if(Object.keys(s).forEach(t=>{r=r.replace(t,s[t].toString())}),e=parseFloat(r),isNaN(e))return null}else e=Number(t);const a=e/60;return a<10?Math.round(10*a)/10:Math.round(a)}findBestMatch(t,e){if(0===e.length)return null;const a=this.normalizeTitle(t);let s=e[0],r=0;for(const t of e){const e=this.normalizeTitle(t.gameName),i=this.calculateSimilarity(a,e);if(i>r&&(r=i,s=t),1===i)break}return r<.5?(console.log(`[HLTBApiClient] No good match found for "${t}" (best score: ${r})`),null):s}normalizeTitle(t){return t.toLowerCase().replace(/[^a-z0-9\s]/g,"").replace(/\s+/g," ").trim()}calculateSimilarity(t,e){if(t===e)return 1;const a=t.length>e.length?t:e,s=t.length>e.length?e:t;if(0===a.length)return 0;const r=this.levenshteinDistance(a,s);return(a.length-r)/a.length}levenshteinDistance(t,e){const a=[];for(let t=0;t<=e.length;t++)a[t]=[t];for(let e=0;e<=t.length;e++)a[0][e]=e;for(let s=1;s<=e.length;s++)for(let r=1;r<=t.length;r++)e.charAt(s-1)===t.charAt(r-1)?a[s][r]=a[s-1][r-1]:a[s][r]=Math.min(a[s-1][r-1]+1,a[s][r-1]+1,a[s-1][r]+1);return a[e.length][t.length]}async batchFetch(e){const a=new Map,s=[];for(let t=0;t<e.length;t+=5)s.push(e.slice(t,t+5));for(const e of s){const r=e.map(async e=>{try{const t=await this.getGameData(e.title);a.set(e.id,t)}catch(s){if(console.error(`[HLTBApiClient] Failed to fetch data for ${e.title}:`,s),a.set(e.id,null),s instanceof t)throw s}});try{await Promise.all(r)}catch(e){if(e instanceof t){console.warn("[HLTBApiClient] Rate limited during batch fetch");break}throw e}s.indexOf(e)<s.length-1&&await this.delay(500)}return a}delay(t){return new Promise(e=>setTimeout(e,t))}clearRateLimit(){this.rateLimitReset=null}resetRetries(t){this.retryManager.reset(t)}}new s({maxRetries:3,baseDelay:1e3,maxDelay:3e4,timeout:3e4});class r extends Error{constructor(t,e,a){super(t),this.name="ScrapingError",this.statusCode=e,this.url=a}}const i=new class{constructor(){this.BASE_URL="https://howlongtobeat.com",this.SEARCH_URL="https://howlongtobeat.com/search_results",this.USER_AGENT="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",this.SELECTORS={searchResults:".search_list_details",gameCard:".search_list_details_block",gameName:".search_list_details_block h3 a",gameNameAlt:".search_list_details_block .search_list_details_block_title",gameImage:"img.search_list_image",gameLink:"h3 a",timeContainer:".search_list_tidbit",timeLabel:".search_list_tidbit_short",timeValue:".search_list_tidbit_long",noResults:".search_list_no_results"}}async scrapeGameData(t){console.log("[HLTB Scraper] Scraping data for:",t);try{const e=await this.fetchSearchResults(t);if(!e)throw new r("Failed to fetch HTML content");const a=this.parseSearchResults(e,t);return console.log(`[HLTB Scraper] Found ${a.games.length} games for "${t}"`),a}catch(t){return console.error("[HLTB Scraper] Error:",t),null}}async fetchSearchResults(t){const e=`${this.SEARCH_URL}?page=1&length=20&sort=name&search=${encodeURIComponent(t)}`;try{const t=await fetch(e,{method:"GET",headers:{"User-Agent":this.USER_AGENT,Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8","Accept-Language":"en-US,en;q=0.5","Accept-Encoding":"gzip, deflate, br",Connection:"keep-alive","Upgrade-Insecure-Requests":"1","Sec-Fetch-Dest":"document","Sec-Fetch-Mode":"navigate","Sec-Fetch-Site":"none","Cache-Control":"max-age=0",Referer:"https://howlongtobeat.com/"}});if(!t.ok)throw new r(`HTTP ${t.status}: ${t.statusText}`,t.status,e);const a=await t.text();if(!a||a.length<100)throw new r("Received empty or invalid HTML response");return a}catch(t){if(t instanceof r)throw t;throw new r(`Network error: ${t instanceof Error?t.message:"Unknown error"}`,void 0,e)}}parseSearchResults(t,e){const a=(new DOMParser).parseFromString(t,"text/html");if(a.querySelector(this.SELECTORS.noResults))return console.log("[HLTB Scraper] No results found"),{games:[],totalResults:0,searchTerm:e,timestamp:Date.now()};const s=a.querySelectorAll(this.SELECTORS.gameCard);console.log(`[HLTB Scraper] Found ${s.length} game cards`);const r=[];return s.forEach((t,e)=>{try{const e=this.parseGameCard(t);e&&r.push(e)}catch(t){console.warn(`[HLTB Scraper] Failed to parse game card ${e}:`,t)}}),{games:r,totalResults:r.length,searchTerm:e,timestamp:Date.now()}}parseGameCard(t){try{const e=t.querySelector(this.SELECTORS.gameName)||t.querySelector(this.SELECTORS.gameNameAlt);if(!e)return console.warn("[HLTB Scraper] No game name found in card"),null;const a=this.cleanText(e.textContent||"");if(!a)return console.warn("[HLTB Scraper] Empty game name"),null;const s=t.querySelector(this.SELECTORS.gameLink);let r=null,i=null;s&&s.href&&(i=this.normalizeUrl(s.href),r=this.extractGameIdFromUrl(i));const n=t.querySelector(this.SELECTORS.gameImage);let l=null;return n&&n.src&&(l=this.normalizeUrl(n.src)),{id:r,name:a,image:l,url:i,...this.parseCompletionTimes(t)}}catch(t){return console.error("[HLTB Scraper] Error parsing game card:",t),null}}parseCompletionTimes(t){const e={mainStory:null,mainExtra:null,completionist:null,allStyles:null};return t.querySelectorAll(this.SELECTORS.timeContainer).forEach(t=>{try{const a=t.querySelector(this.SELECTORS.timeLabel),s=t.querySelector(this.SELECTORS.timeValue);if(!a||!s)return;const r=this.cleanText(a.textContent||"").toLowerCase(),i=this.cleanText(s.textContent||"");if(!r||!i)return;const n=this.parseTimeString(i);r.includes("main story")||r.includes("main")?e.mainStory=n:r.includes("main + extra")||r.includes("main+extra")?e.mainExtra=n:r.includes("completionist")||r.includes("100%")?e.completionist=n:(r.includes("all styles")||r.includes("average"))&&(e.allStyles=n)}catch(t){console.warn("[HLTB Scraper] Error parsing time container:",t)}}),e}parseTimeString(t){if(!t||"--"===t||"-"===t||"n/a"===t.toLowerCase())return null;const e=t.toLowerCase().trim().replace(/hours?/g,"").replace(/hrs?/g,"").replace(/h/g,"").replace(/mins?/g,"").replace(/m/g,"").trim();if(!e)return null;try{let t=e.replace(/½/g,".5").replace(/¼/g,".25").replace(/¾/g,".75").replace(/⅓/g,".33").replace(/⅔/g,".67");const a=t.match(/(\d+(?:\.\d+)?)\s*[-–—]\s*(\d+(?:\.\d+)?)/);if(a){const t=parseFloat(a[1]),e=parseFloat(a[2]);if(!isNaN(t)&&!isNaN(e))return Math.round((t+e)/2)}const s=t.match(/(\d+(?:\.\d+)?)/);if(s){const t=parseFloat(s[1]);if(!isNaN(t)&&t>0)return Math.round(t)}return null}catch(e){return console.warn("[HLTB Scraper] Error parsing time string:",t,e),null}}extractGameIdFromUrl(t){try{const e=t.match(/[?&]id=(\d+)/);return e?e[1]:null}catch(e){return console.warn("[HLTB Scraper] Error extracting game ID from URL:",t,e),null}}normalizeUrl(t){return t?t.startsWith("//")?`https:${t}`:t.startsWith("/")?`${this.BASE_URL}${t}`:t:""}cleanText(t){return t?t.replace(/\s+/g," ").replace(/\n+/g," ").trim().substring(0,200):""}findBestMatch(t,e){if(!e||0===e.length)return null;const a=this.normalizeTitle(t);let s=e[0],r=0;for(const t of e){const e=this.normalizeTitle(t.name),i=this.calculateSimilarity(a,e);i>r&&(r=i,s=t)}return r<.4?(console.log(`[HLTB Scraper] Best match score too low: ${r} for "${t}"`),null):(console.log(`[HLTB Scraper] Best match: "${s.name}" (score: ${r.toFixed(2)})`),s)}normalizeTitle(t){return t.toLowerCase().replace(/[^a-z0-9]/g,"").trim()}calculateSimilarity(t,e){if(t===e)return 1;const a=t.length>e.length?t:e,s=t.length>e.length?e:t;if(0===a.length)return 0;const r=this.levenshteinDistance(a,s);return(a.length-r)/a.length}levenshteinDistance(t,e){const a=[];for(let t=0;t<=e.length;t++)a[t]=[t];for(let e=0;e<=t.length;e++)a[0][e]=e;for(let s=1;s<=e.length;s++)for(let r=1;r<=t.length;r++)e.charAt(s-1)===t.charAt(r-1)?a[s][r]=a[s-1][r-1]:a[s][r]=Math.min(a[s-1][r-1]+1,a[s][r-1]+1,a[s-1][r]+1);return a[e.length][t.length]}validateGameData(t){return!!(t&&"string"==typeof t.name&&t.name.length>0&&t.name.length<=200)}async getScraperStatus(){const t=Date.now();try{const e=await fetch(`${this.BASE_URL}/search_results?search=portal`,{method:"HEAD",headers:{"User-Agent":this.USER_AGENT}}),a=Date.now()-t;return{isHealthy:e.ok,lastCheck:Date.now(),responseTime:a,error:e.ok?null:`HTTP ${e.status}`}}catch(t){return{isHealthy:!1,lastCheck:Date.now(),responseTime:null,error:t instanceof Error?t.message:"Unknown error"}}}},n=new class{constructor(){this.COMMUNITY_DB_URL="https://raw.githubusercontent.com/username/hltb-db/main/games.json",this.localDatabase=new Map,this.aliasMap=new Map,this.initializeLocalDatabase(),this.loadCommunityDatabase()}initializeLocalDatabase(){const t=[{title:"Portal",aliases:["portal 1"],data:{mainStory:3,mainExtra:4,completionist:5,allStyles:4},confidence:"high",lastUpdated:"2024-01"},{title:"Portal 2",aliases:["portal two","portal ii"],data:{mainStory:8,mainExtra:10,completionist:14,allStyles:9},confidence:"high",lastUpdated:"2024-01"},{title:"Half-Life",aliases:["halflife","half life"],data:{mainStory:12,mainExtra:13,completionist:15,allStyles:12},confidence:"high",lastUpdated:"2024-01"},{title:"Half-Life 2",aliases:["halflife 2","half life 2","hl2"],data:{mainStory:13,mainExtra:15,completionist:18,allStyles:13},confidence:"high",lastUpdated:"2024-01"},{title:"Half-Life: Alyx",aliases:["half life alyx","hl alyx","alyx"],data:{mainStory:12,mainExtra:13,completionist:18,allStyles:12},confidence:"high",lastUpdated:"2024-01"},{title:"Team Fortress 2",aliases:["tf2","team fortress two"],data:{mainStory:null,mainExtra:null,completionist:null,allStyles:null},confidence:"high"},{title:"Counter-Strike 2",aliases:["cs2","cs 2","counterstrike 2"],data:{mainStory:null,mainExtra:null,completionist:null,allStyles:null},confidence:"high"},{title:"Counter-Strike: Global Offensive",aliases:["csgo","cs go","cs:go"],data:{mainStory:null,mainExtra:null,completionist:null,allStyles:null},confidence:"high"},{title:"Dota 2",aliases:["dota two"],data:{mainStory:null,mainExtra:null,completionist:null,allStyles:null},confidence:"high"},{title:"Hades",aliases:["hades 1"],data:{mainStory:22,mainExtra:45,completionist:95,allStyles:55},confidence:"high",lastUpdated:"2024-01"},{title:"Hades II",aliases:["hades 2","hades two"],data:{mainStory:15,mainExtra:25,completionist:50,allStyles:30},confidence:"medium",lastUpdated:"2024-09"},{title:"Hollow Knight",aliases:[],data:{mainStory:27,mainExtra:40,completionist:63,allStyles:42},confidence:"high",lastUpdated:"2024-01"},{title:"Celeste",aliases:[],data:{mainStory:8,mainExtra:12,completionist:37,allStyles:28},confidence:"high",lastUpdated:"2024-01"},{title:"Stardew Valley",aliases:[],data:{mainStory:53,mainExtra:95,completionist:156,allStyles:96},confidence:"high",lastUpdated:"2024-01"},{title:"Terraria",aliases:[],data:{mainStory:50,mainExtra:104,completionist:215,allStyles:115},confidence:"high",lastUpdated:"2024-01"},{title:"Elden Ring",aliases:[],data:{mainStory:60,mainExtra:100,completionist:130,allStyles:96},confidence:"high",lastUpdated:"2024-01"},{title:"The Witcher 3: Wild Hunt",aliases:["witcher 3","the witcher three"],data:{mainStory:50,mainExtra:100,completionist:170,allStyles:101},confidence:"high",lastUpdated:"2024-01"},{title:"Red Dead Redemption 2",aliases:["rdr2","red dead 2"],data:{mainStory:50,mainExtra:80,completionist:180,allStyles:80},confidence:"high",lastUpdated:"2024-01"},{title:"Grand Theft Auto V",aliases:["gta 5","gta v","gtav"],data:{mainStory:32,mainExtra:48,completionist:83,allStyles:52},confidence:"high",lastUpdated:"2024-01"},{title:"Cyberpunk 2077",aliases:["cyberpunk","cp2077"],data:{mainStory:25,mainExtra:60,completionist:105,allStyles:61},confidence:"high",lastUpdated:"2024-01"},{title:"Baldur's Gate 3",aliases:["bg3","baldurs gate 3"],data:{mainStory:75,mainExtra:100,completionist:200,allStyles:107},confidence:"high",lastUpdated:"2024-01"},{title:"Dark Souls",aliases:["dark souls 1","ds1"],data:{mainStory:42,mainExtra:60,completionist:105,allStyles:66},confidence:"high",lastUpdated:"2024-01"},{title:"Dark Souls II",aliases:["dark souls 2","ds2"],data:{mainStory:44,mainExtra:70,completionist:120,allStyles:78},confidence:"high",lastUpdated:"2024-01"},{title:"Dark Souls III",aliases:["dark souls 3","ds3"],data:{mainStory:32,mainExtra:48,completionist:100,allStyles:59},confidence:"high",lastUpdated:"2024-01"},{title:"Sekiro: Shadows Die Twice",aliases:["sekiro"],data:{mainStory:30,mainExtra:40,completionist:70,allStyles:41},confidence:"high",lastUpdated:"2024-01"},{title:"Civilization VI",aliases:["civ 6","civ vi","civilization 6"],data:{mainStory:22,mainExtra:40,completionist:220,allStyles:81},confidence:"high",lastUpdated:"2024-01"},{title:"Total War: WARHAMMER III",aliases:["total warhammer 3","tww3"],data:{mainStory:32,mainExtra:125,completionist:280,allStyles:180},confidence:"medium",lastUpdated:"2024-01"},{title:"The Binding of Isaac: Rebirth",aliases:["binding of isaac rebirth","tboi rebirth"],data:{mainStory:13,mainExtra:50,completionist:270,allStyles:140},confidence:"high",lastUpdated:"2024-01"},{title:"Risk of Rain 2",aliases:["ror2"],data:{mainStory:10,mainExtra:30,completionist:120,allStyles:59},confidence:"high",lastUpdated:"2024-01"},{title:"Dead Cells",aliases:[],data:{mainStory:14,mainExtra:30,completionist:83,allStyles:46},confidence:"high",lastUpdated:"2024-01"}];for(const e of t){const t=this.normalizeTitle(e.title);if(this.localDatabase.set(t,e),e.aliases)for(const a of e.aliases)this.aliasMap.set(this.normalizeTitle(a),t)}console.log(`[HLTB Fallback] Initialized with ${this.localDatabase.size} games`)}async loadCommunityDatabase(){try{const t=await fetch(this.COMMUNITY_DB_URL,{method:"GET",headers:{Accept:"application/json"},signal:AbortSignal.timeout(5e3)});if(t.ok){const e=await t.json();this.populateCommunityData(e),console.log("[HLTB Fallback] Community database loaded")}}catch(t){console.log("[HLTB Fallback] Community database not available, using local data only")}}populateCommunityData(t){if(!Array.isArray(t))return;let e=0;for(const a of t){if(!a.title||!a.data)continue;const t=this.normalizeTitle(a.title),s=this.localDatabase.get(t);s&&"high"===s.confidence||(this.localDatabase.set(t,{title:a.title,aliases:a.aliases||[],data:a.data,confidence:"medium",lastUpdated:a.lastUpdated}),e++)}console.log(`[HLTB Fallback] Added ${e} games from community database`)}async searchFallback(t){const e=this.normalizeTitle(t);if(this.localDatabase.has(e))return console.log(`[HLTB Fallback] Direct match found for: ${t}`),this.localDatabase.get(e).data;if(this.aliasMap.has(e)){const a=this.aliasMap.get(e);return console.log(`[HLTB Fallback] Alias match found for: ${t}`),this.localDatabase.get(a).data}const a=this.findFuzzyMatch(e);if(a)return console.log(`[HLTB Fallback] Fuzzy match found for: ${t}`),a;const s=this.findPartialMatch(e);return s?(console.log(`[HLTB Fallback] Partial match found for: ${t}`),s):(console.log(`[HLTB Fallback] No match found for: ${t}`),null)}findFuzzyMatch(t){const e=t.split(/\s+/);let a=null,s=0;for(const[t,r]of this.localDatabase.entries()){const i=t.split(/\s+/);let n=0;for(const t of e)i.some(e=>e.includes(t)||t.includes(e))&&n++;const l=n/Math.max(e.length,i.length);l>s&&l>=.5&&(s=l,a=r)}return a?a.data:null}findPartialMatch(t){for(const[e,a]of this.localDatabase.entries())if((e.includes(t)||t.includes(e))&&(!t.includes(e)||e.length>.5*t.length))return a.data;return null}normalizeTitle(t){return t.toLowerCase().replace(/[^a-z0-9\s]/g,"").replace(/\s+/g," ").trim()}getAvailableGames(){return Array.from(this.localDatabase.values()).map(t=>t.title)}getStats(){const t=Array.from(this.localDatabase.values()).filter(t=>"high"===t.confidence).length,e=Array.from(this.localDatabase.values()).filter(t=>"medium"===t.confidence).length,a=Array.from(this.localDatabase.values()).filter(t=>"low"===t.confidence).length;return{totalGames:this.localDatabase.size,totalAliases:this.aliasMap.size,highConfidence:t,mediumConfidence:e,lowConfidence:a}}};class l{constructor(){this.CACHE_KEY="hltb_cache",this.cache=new Map,this.cacheDuration=6048e5,this.loadCache()}async loadCache(){const t=await chrome.storage.local.get(this.CACHE_KEY);t[this.CACHE_KEY]&&(this.cache=new Map(Object.entries(t[this.CACHE_KEY])),this.cleanExpired())}async saveCache(){await chrome.storage.local.set({[this.CACHE_KEY]:Object.fromEntries(this.cache)})}async get(t){const e=this.cache.get(t);return e?Date.now()-e.timestamp>this.cacheDuration?(this.cache.delete(t),await this.saveCache(),null):(e.hits++,await this.saveCache(),e.data):null}async set(t,e){this.cache.set(t,{data:e,timestamp:Date.now(),hits:0}),this.cache.size>1e3&&this.evictLRU(),await this.saveCache()}cleanExpired(){const t=Date.now();for(const[e,a]of this.cache.entries())t-a.timestamp>this.cacheDuration&&this.cache.delete(e)}evictLRU(){let t="",e=1/0;for(const[a,s]of this.cache.entries()){const r=s.hits+(Date.now()-s.timestamp)/1e6;r<e&&(e=r,t=a)}t&&this.cache.delete(t)}async getStats(){const t=Array.from(this.cache.values());return 0===t.length?{size:0,hits:0,oldestEntry:null,totalSize:0}:{size:this.cache.size,hits:t.reduce((t,e)=>t+e.hits,0),oldestEntry:Math.min(...t.map(t=>t.timestamp)),totalSize:JSON.stringify(Object.fromEntries(this.cache)).length}}async clear(){this.cache.clear(),await chrome.storage.local.remove(this.CACHE_KEY)}}class o{constructor(t,e){this.maxTokens=t,this.windowMs=e,this.tokens=t,this.lastRefill=Date.now()}async wait(){if(this.refill(),this.tokens>0)return void this.tokens--;const t=this.windowMs-(Date.now()-this.lastRefill);await new Promise(e=>setTimeout(e,t)),this.refill(),this.tokens--}refill(){const t=Date.now();t-this.lastRefill>=this.windowMs&&(this.tokens=this.maxTokens,this.lastRefill=t)}}class c{constructor(){this.queue=[],this.processing=!1,this.rateLimiter=new o(10,6e4)}async enqueue(t){return new Promise((e,a)=>{this.queue.push(async()=>{try{await this.rateLimiter.wait();const a=await t();e(a)}catch(t){a(t)}}),this.process()})}async process(){if(!this.processing&&0!==this.queue.length){for(this.processing=!0;this.queue.length>0;){const t=this.queue.shift();t&&await t()}this.processing=!1}}async flush(){return Promise.all(this.queue.map(t=>t()))}}const h=new class{constructor(){this.stats={apiAttempts:0,apiSuccesses:0,scraperAttempts:0,scraperSuccesses:0,fallbackAttempts:0,fallbackSuccesses:0,cacheHits:0,totalRequests:0,averageRetrievalTime:0},this.totalRetrievalTime=0,this.apiClient=new s({maxRetries:3,baseDelay:1e3,timeout:1e4}),this.cacheService=new l,this.queueService=new c}async getGameData(t,e,a={}){const s=Date.now();this.stats.totalRequests++,console.log(`[HLTB Integrated] Searching for: ${t}`);try{if(!a.skipCache){const a=await this.tryCache(t,e);if(a)return this.updateRetrievalTime(Date.now()-s),a}return await this.queueService.enqueue(async()=>{let r=null;return!a.skipApi&&(r=await this.tryAPI(t,a),r)||!a.skipScraping&&(r=await this.tryScraping(t,a),r)||!a.skipFallback&&(r=await this.tryFallback(t),r)?(await this.cacheResult(t,e,r),this.updateRetrievalTime(Date.now()-s),r):(console.log(`[HLTB Integrated] No data found for: ${t}`),this.updateRetrievalTime(Date.now()-s),null)})}catch(t){return console.error("[HLTB Integrated] Fatal error:",t),this.updateRetrievalTime(Date.now()-s),null}}async tryCache(t,e){const a=(e||t).replace(/[^a-zA-Z0-9_-]/g,"").substring(0,50),s=await this.cacheService.get(a);return s?(console.log("[HLTB Integrated] Cache hit for:",t),this.stats.cacheHits++,s.source||(s.source="cache"),s.confidence||(s.confidence="medium"),s.retrievalTime||(s.retrievalTime=0),s):null}async tryAPI(a,s){console.log("[HLTB Integrated] Trying API for:",a),this.stats.apiAttempts++;try{const t=await this.apiClient.getGameData(a);if(t)return console.log("[HLTB Integrated] API success for:",a),this.stats.apiSuccesses++,{...t,source:"api",confidence:"high",retrievalTime:Date.now()}}catch(a){a instanceof t?console.warn("[HLTB Integrated] API rate limited, skipping API for future requests"):a instanceof e?console.warn("[HLTB Integrated] API network error:",a.message):console.error("[HLTB Integrated] API error:",a)}return null}async tryScraping(t,e){console.log("[HLTB Integrated] Trying scraper for:",t),this.stats.scraperAttempts++;try{const e=await i.scrapeGameData(t);if(e&&e.games.length>0){const a=i.findBestMatch(t,e.games);if(a)return console.log("[HLTB Integrated] Scraper success for:",t),this.stats.scraperSuccesses++,{mainStory:a.mainStory,mainExtra:a.mainExtra,completionist:a.completionist,allStyles:a.allStyles,source:"scraper",confidence:"medium",retrievalTime:Date.now()}}}catch(t){console.error("[HLTB Integrated] Scraper error:",t)}return null}async tryFallback(t){console.log("[HLTB Integrated] Trying fallback for:",t),this.stats.fallbackAttempts++;try{const e=await n.searchFallback(t);if(e)return console.log("[HLTB Integrated] Fallback success for:",t),this.stats.fallbackSuccesses++,{...e,source:"fallback",confidence:"low",retrievalTime:Date.now()}}catch(t){console.error("[HLTB Integrated] Fallback error:",t)}return null}async cacheResult(t,e,a){const s=(e||t).replace(/[^a-zA-Z0-9_-]/g,"").substring(0,50);try{await this.cacheService.set(s,a),console.log(`[HLTB Integrated] Cached result for: ${t}`)}catch(t){console.error("[HLTB Integrated] Cache write error:",t)}}updateRetrievalTime(t){this.totalRetrievalTime+=t,this.stats.averageRetrievalTime=Math.round(this.totalRetrievalTime/this.stats.totalRequests)}async batchFetch(t,e={}){const a=new Map;for(let s=0;s<t.length;s+=5){const r=t.slice(s,s+5).map(t=>this.getGameData(t.title,t.appId,e).then(e=>({key:t.appId||t.title,data:e}))),i=await Promise.allSettled(r);for(const t of i)"fulfilled"===t.status?a.set(t.value.key,t.value.data):console.error("[HLTB Integrated] Batch fetch error:",t.reason);s+5<t.length&&await new Promise(t=>setTimeout(t,500))}return a}getStats(){return{...this.stats}}resetStats(){this.stats={apiAttempts:0,apiSuccesses:0,scraperAttempts:0,scraperSuccesses:0,fallbackAttempts:0,fallbackSuccesses:0,cacheHits:0,totalRequests:0,averageRetrievalTime:0},this.totalRetrievalTime=0}async clearCache(){const t=await this.cacheService.clear();return console.log(`[HLTB Integrated] Cleared ${t} cache entries`),t}async getDiagnostics(){const[t,e,a]=await Promise.all([this.cacheService.getStats(),n.getStats(),i.getScraperStatus()]);return{service:{stats:this.getStats(),successRates:{api:this.stats.apiAttempts>0?(this.stats.apiSuccesses/this.stats.apiAttempts*100).toFixed(1)+"%":"N/A",scraper:this.stats.scraperAttempts>0?(this.stats.scraperSuccesses/this.stats.scraperAttempts*100).toFixed(1)+"%":"N/A",fallback:this.stats.fallbackAttempts>0?(this.stats.fallbackSuccesses/this.stats.fallbackAttempts*100).toFixed(1)+"%":"N/A",cacheHitRate:this.stats.totalRequests>0?(this.stats.cacheHits/this.stats.totalRequests*100).toFixed(1)+"%":"N/A"}},cache:t,fallback:e,scraper:a}}async healthCheck(){const t=[];this.stats.apiAttempts>10&&0===this.stats.apiSuccesses&&t.push("API is not responding"),this.stats.scraperAttempts>10&&0===this.stats.scraperSuccesses&&t.push("Scraper is not working"),this.stats.averageRetrievalTime>5e3&&t.push(`Slow average retrieval time: ${this.stats.averageRetrievalTime}ms`);const e=await this.cacheService.getStats();return e.size>1e3&&t.push(`Cache is getting large: ${e.size} entries`),{healthy:0===t.length,issues:t}}},m=new class{constructor(t){this.hltbService=t}async handle(t,e){switch(t.action){case"fetchHLTB":return this.handleFetchHLTB(t);case"clearCache":return this.handleClearCache();case"getCacheStats":return this.handleGetCacheStats();case"batchFetch":return this.handleBatchFetch(t);case"getSettings":return this.handleGetSettings();case"getDiagnostics":return this.handleGetDiagnostics();case"getStats":return this.handleGetStats();case"healthCheck":return this.handleHealthCheck();default:throw new Error(`Unknown action: ${t.action}`)}}async handleFetchHLTB(t){const{gameTitle:e,appId:a}=t;if(!e)return{success:!1,error:"Game title is required"};if(a&&("string"!=typeof a||!/^\d+$/.test(a)))return{success:!1,error:"Invalid app ID"};if("string"!=typeof e||e.length>200)return{success:!1,error:"Invalid game title"};try{return{success:!0,data:await this.hltbService.getGameData(e,a)}}catch(t){return console.error("[HLTB] Fetch error:",t),{success:!1,error:t.message}}}async handleClearCache(){return{success:!0,message:`Cache cleared (${await this.hltbService.clearCache()} entries)`}}async handleGetCacheStats(){return{success:!0,data:(await this.hltbService.getDiagnostics()).cache}}async handleGetSettings(){try{const t=await chrome.storage.local.get(["enabled","cacheEnabled","theme","cacheDurationHours"]);return{success:!0,settings:{enabled:!1!==t.enabled,cacheEnabled:!1!==t.cacheEnabled,theme:t.theme||"auto",cacheDurationHours:t.cacheDurationHours||168}}}catch(t){return console.error("[HLTB] Error getting settings:",t),{success:!1,error:t.message}}}async handleBatchFetch(t){const{games:e}=t;return Array.isArray(e)?{success:!0,data:await this.hltbService.batchFetch(e)}:{success:!1,error:"Games array is required"}}async handleGetDiagnostics(){try{return{success:!0,data:await this.hltbService.getDiagnostics()}}catch(t){return console.error("[HLTB] Error getting diagnostics:",t),{success:!1,error:t.message}}}async handleGetStats(){try{return{success:!0,data:this.hltbService.getStats()}}catch(t){return console.error("[HLTB] Error getting stats:",t),{success:!1,error:t.message}}}async handleHealthCheck(){try{return{success:!0,data:await this.hltbService.healthCheck()}}catch(t){return console.error("[HLTB] Error checking health:",t),{success:!1,error:t.message}}}}(h);chrome.runtime.onInstalled.addListener(async t=>{if(console.log("[HLTB] Extension installed:",t.reason),"install"===t.reason)await chrome.storage.local.set({enabled:!0,cacheEnabled:!0,cacheDurationHours:168,rateLimit:{maxRequests:10,windowMs:6e4}});else if("update"===t.reason){const e=t.previousVersion;console.log("[HLTB] Updated from version:",e)}}),chrome.runtime.onMessage.addListener((t,e,a)=>(console.log("[HLTB] Message received:",t.action),m.handle(t,e).then(a).catch(t=>{console.error("[HLTB] Message handler error:",t),a({success:!1,error:t.message})}),!0)),chrome.alarms.create("keep-alive",{periodInMinutes:.25}),chrome.alarms.onAlarm.addListener(t=>{"keep-alive"===t.name&&chrome.runtime.getPlatformInfo(()=>{})}),chrome.runtime.onSuspend.addListener(()=>{console.log("[HLTB] Service worker suspending...")})})();